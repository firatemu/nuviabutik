# Generated by Django 5.2.5 on 2025-09-03 21:33

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('admin', 'Sistem Yöneticisi'), ('manager', 'Mağaza Müdürü'), ('cashier', 'Kasiyer'), ('stock_clerk', 'Depo Sorumlusu'), ('viewer', 'Görüntüleme Yetkisi')], default='viewer', max_length=20, verbose_name='Rol')),
                ('phone_number', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message="Telefon numarası '+999999999' formatında olmalıdır. 15 haneden fazla olamaz.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Telefon Numarası')),
                ('address', models.TextField(blank=True, verbose_name='Adres')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Doğum Tarihi')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_users', to=settings.AUTH_USER_MODEL, verbose_name='Oluşturan')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Kullanıcı',
                'verbose_name_plural': 'Kullanıcılar',
                'ordering': ['username'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserActivityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('login', 'Giriş'), ('logout', 'Çıkış'), ('create', 'Oluşturma'), ('update', 'Güncelleme'), ('delete', 'Silme'), ('view', 'Görüntüleme')], max_length=20, verbose_name='Eylem')),
                ('content_type', models.CharField(blank=True, max_length=100, verbose_name='İçerik Türü')),
                ('object_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='Nesne ID')),
                ('description', models.TextField(blank=True, verbose_name='Açıklama')),
                ('ip_address', models.GenericIPAddressField(verbose_name='IP Adresi')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Zaman')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Kullanıcı')),
            ],
            options={
                'verbose_name': 'Kullanıcı Aktivite Logu',
                'verbose_name_plural': 'Kullanıcı Aktivite Logları',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pictures/', verbose_name='Profil Fotoğrafı')),
                ('department', models.CharField(blank=True, max_length=100, verbose_name='Departman')),
                ('hire_date', models.DateField(blank=True, null=True, verbose_name='İşe Başlama Tarihi')),
                ('salary', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Maaş')),
                ('emergency_contact', models.CharField(blank=True, max_length=100, verbose_name='Acil Durum İletişim')),
                ('emergency_phone', models.CharField(blank=True, max_length=17, verbose_name='Acil Durum Telefonu')),
                ('notes', models.TextField(blank=True, verbose_name='Notlar')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Kullanıcı')),
            ],
            options={
                'verbose_name': 'Kullanıcı Profili',
                'verbose_name_plural': 'Kullanıcı Profilleri',
            },
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(max_length=40, verbose_name='Oturum Anahtarı')),
                ('ip_address', models.GenericIPAddressField(verbose_name='IP Adresi')),
                ('user_agent', models.TextField(verbose_name='Tarayıcı Bilgisi')),
                ('login_time', models.DateTimeField(auto_now_add=True, verbose_name='Giriş Zamanı')),
                ('logout_time', models.DateTimeField(blank=True, null=True, verbose_name='Çıkış Zamanı')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Kullanıcı')),
            ],
            options={
                'verbose_name': 'Kullanıcı Oturumu',
                'verbose_name_plural': 'Kullanıcı Oturumları',
                'ordering': ['-login_time'],
            },
        ),
    ]
